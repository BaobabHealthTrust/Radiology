<style>                                                                         
  .nonclinic {
	background-color: #C0C0C0 ! important;
  }
  .selected {
	background-color: #99EE99 ! important;
	color: #000000;
	font-weight:bold;
  }
  .publicholiday {
	background-color: #CD3333 ! important;
  }
  div {
	-moz-user-select: none;
  }
  #cover {
	position: absolute;
	background-color: black;
	width: 100%;
	height: 102%;
	left: 0%;
	top: 0%;
	z-index: 500;
	opacity: 0.5;
	align: center;
  }
  #alertPage{
	position: absolute;
	left: 575px;
	width: 350px;
	height: 150px;
	top: 185px;
	padding-bottom: 10px;
	font-size: 1em;
	text-align: center;
	background-color: tomato;
	padding: 10px;
	z-index: 999;
	border: 5px outset tomato;
	border-radius: 15px;
	z-index: 900;
  }
  .message{
	font-size:20px;
	color:white;
	font-weight:bold;
  }

  .cTable {
    height: 78%;
    width: 97%;
  }

  .cRow {
    line-height: 30px;
  }

</style>

<script src="/javascripts/jquery-1.3.2.min.js" type="text/javascript"></script>
<script language="javascript" type="text/javascript" src="/javascripts/jquery.flot.js"></script>
<script src="/javascripts/touchscreenYesNo.js" type="text/javascript"></script>
<script type="text/javascript">
  <!--
  tt_cancel_destination = "/patients/show/<%= @patient.patient_id%>";
  tt_cancel_show = '/patients/show/<%= @patient.id %>?auto_load_forms=false';
  var patient_id = <%= @patient.id %>;
  var globalDate;
  var counts = <%= @counts.to_json() %>;
<%
    patient = PatientService.get_patient(Person.find(@patient.id))
    session_date = session[:datetime].to_date.strftime('%d/%m/%Y') rescue Date.today.strftime('%d/%m/%Y') 
%> 
   
<%
clinic_holidays = CoreService.get_global_property_value('clinic.holidays') || '1900-12-25,1900-03-03'
@clinic_days = CoreService.get_global_property_value('clinic.days') rescue []
@clinic_days = CoreService.get_global_property_value('peads.clinic.days') rescue [] if PatientService.age(@patient.person).to_i <= 14
days = []
(@clinic_days || []).include?('Sunday')?days.push("Sunday"):days.push("")
(@clinic_days || []).include?('Monday')?days.push("Monday"):days.push("")
(@clinic_days || []).include?('Tuesday')?days.push("Tuesday"):days.push("")
(@clinic_days || []).include?('Wednesday')?days.push("Wednesday"):days.push("")
(@clinic_days || []).include?('Thursday')?days.push("Thursday"):days.push("")
(@clinic_days || []).include?('Friday')?days.push("Friday"):days.push("")
(@clinic_days || []).include?('Saturday')?days.push("Saturday"):days.push("")
clinic_holidays = clinic_holidays.split(',').to_json
 
if @clinic_days.blank?
   days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
end
 
%>
  var clinic_holidays = <%= clinic_holidays %>
  var totalWeekend = new Array;
  var totalHoliday = new Array;
  function summary() {
    //updateWhoStage();
    //updateReasonForArtEligibility();
    //var conditions = selectedConditions();
    var display = "<div><span class='title'>WHO Stage: Test</span></div>";

    //$('inputFrame'+tstCurrentPage).innerHTML = '<div id="summary">' + display + '</div>' ;
    $("clearButton").style.display = 'none';
    $("cancelButton").style.display = 'none';

    generateBalancer();
    $("observations__value_datetime").value = "";
  }

  var date_set = [];

  for(var c = 0; c < clinic_holidays.length; c++) {
    date_set.push(clinic_holidays[c]);
  }

  function showSelectedDates() {
    activeCells = document.getElementsByClassName('cellActive');
    for(var i = 0; i < activeCells.length; i++) {
	  weekDay = activeCells[i].getAttribute('date');
	  param = activeCells[i];
	  nn = new Date(weekDay).getDay();
	  var days = '<%= days.join(',') %>';
	  days = days.split(',');
	  if (days[nn] == ""){

		activeCells[i].setAttribute("ajaxCalendarUrl", "/patients/number_of_booked_patients?date=" + weekDay);
		activeCells[i].className += " nonclinic";
		activeCells[i].setAttribute('onclick', "showConfirm('Non-clinic day', this);");
		
		totalWeekend.push(activeCells[i])
		   
	  }
	  else{
		activeCells[i].setAttribute("ajaxCalendarUrl", "/patients/number_of_booked_patients?date=" + weekDay)
		activeCells[i].setAttribute('onclick', "showConfirm('none', this);");
		
		for(var x = 0 ; x < clinic_holidays.length; x++){
		  if (weekDay == clinic_holidays[x]) {
			activeCells[i].className += " publicholiday";
			activeCells[i].setAttribute('onclick', "showConfirm('Public Holiday', this);");
			totalHoliday.push(activeCells[i])
		  }
			
		}
		
	  }
	}
  }

  function setAttributes() {
    buttons = document.getElementsByClassName('btn');
    for(var i = 0; i < buttons.length; i++) {
      new_attr = buttons[i].getAttribute('onclick') + ';showSelectedDates();'
      buttons[i].setAttribute('onclick',new_attr);
    }
  }
  var attt;
  var result;
  function showConfirm(attt, field){
	globalDate = field
	getTotal();
	activeCells = document.getElementsByClassName('cellActive');
	if (attt == "none"){

			for(var i = 0; i < activeCells.length; i++) {
				  activeCells[i].style.backgroundColor = "white"
				  if (totalWeekend.indexOf(activeCells[i]) > -1){
						activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , ' nonclinic' );
				  }
				  else if (totalHoliday.indexOf(activeCells[i]) > -1){
						activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , ' publicholiday' );
				  }
				  else if (field.getAttribute('date') == activeCells[i].getAttribute('date')){
						field.className = field.className.replace( /(?:^|\s)selected(?!\S)/g , ' ' );
						field.className +=  ' selected';
				  }
				  else{
						activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , '' );
				  }
			}
	}

	else {
			for(var i = 0; i < activeCells.length; i++) {
			 activeCells[i].style.backgroundColor = "white"
			  if (totalWeekend.indexOf(activeCells[i]) > -1){
				if (field.getAttribute('date') == activeCells[i].getAttribute('date')){
				  field.className = field.className.replace( /(?:^|\s)nonclinic(?!\S)/g , ' selected' );
				}
				else {
				activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , ' nonclinic' );
				}
			  }
			  else if (totalHoliday.indexOf(activeCells[i]) > -1){
				if (field.getAttribute('date') == activeCells[i].getAttribute('date')){
				  field.className = field.className.replace( /(?:^|\s)publicholiday(?!\S)/g , ' selected' );
				}
				else {
				activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , ' publicholiday' );
				}
			  }
			  else{
				activeCells[i].className = activeCells[i].className.replace( /(?:^|\s)selected(?!\S)/g , '' );
			  }
			}

	  var ele = document.getElementById('cover')
	  ele.style.display = "block";
	  document.body.appendChild(ele);

	  var newDiv = document.createElement('div');
	  newDiv.id = "alertPage";
	  newDiv.innerHTML = "<p class='message'>" + attt + "</p>";
	  document.body.appendChild(newDiv);

	  var newBtn = document.createElement('button');
	  newBtn.className = "blue";
	  newBtn.innerHTML = "<span>Ok</span>";
	  newDiv.appendChild(newBtn);
	  newBtn.setAttribute('onclick', "document.getElementById('cover').style.display='none'; this.parentNode.style.display='none';");
	}
  }

  function getTotal() {
    var aUrl = "/patients/number_of_booked_patients?date=" + globalDate.getAttribute('date');
    var httpRequest = new XMLHttpRequest();
    httpRequest.onreadystatechange = function() {
      set_total(httpRequest);
    };
    try {
      httpRequest.open('GET', aUrl, true);
      httpRequest.send(null);
    } catch(e){
    }
  }

  function set_total(req) {
    if (req.readyState == 4 && req.status == 200) {
      total = JSON.parse(req.responseText);
	  if(globalDate.getElementsByTagName("div").length <= 0){
		var daycount = document.createElement('div');
		daycount.className = "dayCount";
		globalDate.appendChild(daycount);
	  }

	  globalDate.getElementsByTagName("div")[0].innerHTML = total[globalDate.getAttribute('date')];
	  __$('observations__value_datetime').value = globalDate.getAttribute('date');
    }
  }

  function set_ajaxURL_for_suggestions(value) {
  	url = "/investigation/examination?radiology_test=" + value + "&examination=";
    $('touchscreenInput'+tstCurrentPage).setAttribute('ajaxURL', url);
    listSuggestions(tstCurrentPage);
  }

  function showBarcode(){
    var exam_type = $("list_of_radiology_test").value;
    var exam = ""
    if ($("detailed_examination").value)
      {
       var exam = $("examination").value + "-" + $("detailed_examination").value
      }
     else
       {
         var exam = $("examination").value
       }
    var referred_from = $("referred_by").value
    displayText = drawLabel(exam_type,exam,referred_from);
     $('tt_page_summary').innerHTML = '<div id="summary">' + displayText + '</div>' ;
  }

  examination_sets = '<%= "#{@examination_sets}" %>';


  function summary() {
    //updateWhoStage();
    //updateReasonForArtEligibility();
    //var conditions = selectedConditions();
    var display = "<div><span class='title'>WHO Stage: Test</span></div>";

    //$('inputFrame'+tstCurrentPage).innerHTML = '<div id="summary">' + display + '</div>' ;
    $("clearButton").style.display = 'none';
    $("cancelButton").style.display = 'none';

    generateBalancer();
    $("observations__value_datetime").value = "";
  }

  //-->
</script>

<form id="frmMain" action="/encounters/create/" method="post">
  


   <%= touch_select_tag "RADIOLOGY TEST", @patient, concept_set_options("LIST OF RADIOLOGY TESTS"),
		{	:id => "list_of_radiology_test",
		 	:helpText => "Please select the type of examination" } %>

	 <%= touch_select_tag "Examination", @patient, nil,
				{	:id => "examination",
					:tt_onLoad => 'set_ajaxURL_for_suggestions($("list_of_radiology_test").value);',
				                    :tt_pageStyleClass => "Keyboard",
				 	:helpText => "Please select the examination" } %>

	 <%= touch_select_tag "Detailed examination", @patient, nil,
				{	:id => "detailed_examination",
				 	:condition => 'examination_sets.contains($("examination").value)',
				                    :tt_onLoad => 'set_ajaxURL_for_suggestions($("examination").value);',
				                    :tt_pageStyleClass => "Keyboard",
				 	:helpText => "Please select the detailed examination" } %>
  
	<%= hidden_field_tag "encounter[encounter_type_name]", "APPOINTMENT" %>
	<%= hidden_field_tag "encounter[patient_id]", @patient.id %>
	<%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
	<%= hidden_field_tag "encounter[provider_id]", current_user.user_id %>

  <%= hidden_field_tag("observations[][concept_name]", "RETURN VISIT DATE") %>
  <%= hidden_field_tag("observations[][patient_id]", @patient.id) %>
  <%= hidden_field_tag("observations[][obs_datetime]", DateTime.now()) %>
  <%= hidden_field_tag("change_appointment_date", "true")%>
  
  <%= text_field_tag("observations[][value_datetime]", (session[:datetime] ? session[:datetime].to_date : Date.today).strftime("%Y-%m-%d"),
	  {
		:field_type => 'calendar',
		:tt_onLoad => "setAttributes();showSelectedDates();showCategory('Next Appointment'); __$('category').style.display = 'none'; __$('cover').style.display = 'none'; ",
		:minDate => "#{ ((session[:datetime] ? session[:datetime].to_date : Date.today) + 6.month).strftime("%Y-%m-%d") }",
		:ajaxCalendarUrl => "/patients/number_of_booked_patients?date=",
		:tt_onUnLoad => "__$('observations__value_datetime').value = hideInfo();"
	  }) %>

  <% session_date = session[:datetime].to_date rescue nil
  if session_date %>
    <p><label for="filter_provider">Staff who provided the information (Provider)</label></br>
      <%= text_field "filter" , 'provider', :helpText => 'Staff who provided the information (Provider)', :ajaxURL => '/user/username?username=' %></p>
  <% else %>
    <%= hidden_field_tag "filter[provider]", nil %>
  <%end%>

</form>
