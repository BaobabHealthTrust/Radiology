<style>
	.tt_controls_clinical_notes_optional #space { display:inline; }

	.tt_controls_cd4_count #char {
		display: none;
	}

	.tt_controls_cd4_percent #char {
		display: none;
	}

	.tt_controls_lymphocyte_count #char {
		display: none;
	}
</style>

<script>
	<% firstPositiveHivTestType = @confirmatory_hiv_test_type %>
	var tt_cancel_destination = "/patients/show/<%= @patient.patient_id -%>";
	var age = <%= @patient_bean.age -%>;
	var ageInMonths = <%= @patient_bean.age_in_months -%>;
	var firstPositiveHivTestType = "<%= @confirmatory_hiv_test_type -%>";  
	var cd4_count_numeric, cd4_count_estimate, cd4_count_modifier;
	var selected_stage_conditions = {};
	var retrospective_entry = <%= @retrospective %>

	function updateCD4Count() {
		var cd4_available = $('new_cd4_count_available').value == 'YES';
		var cd4_count = cd4_available ? $('cd4_count').value : null;

		try { cd4_count_numeric = parseInt(cd4_count); } catch(e) { cd4_count_numeric = null; }

		if (cd4_count_numeric == null || ''+cd4_count_numeric == 'NaN') {
			try {
				var matches = cd4_count.match(/^(\<|\>)([0-9\.]+)$/);
				cd4_count_modifier = matches[1]; 
				cd4_count_estimate = parseInt(matches[2]);
				cd4_count_numeric = cd4_count_estimate;
				if (cd4_count_modifier == '<') cd4_count_numeric -= 1;
				if (cd4_count_modifier == '>') cd4_count_numeric += 1;
			} catch(e) {
				cd4_count_modifier = null; 
				cd4_count_estimate = null;
				cd4_count_numeric = null;
			}
		}

		if (cd4_count_numeric == null || '' + cd4_count_numeric == 'NaN') {
			$('cd4_count_less_than_250').value = "UNKNOWN";
			$('cd4_count_less_than_350').value = "UNKNOWN";
		} else {
			$('cd4_count_less_than_250').value = (cd4_count_numeric <= 250) ? "YES" : "NO";
			$('cd4_count_less_than_350').value = (cd4_count_numeric <= 350) ? "YES" : "NO";
		}    
	}

	function updateCD4Percent() {
		var cd4_percent_available = $('new_cd4_percent_available').value == 'YES';
		var cd4_percent = cd4_percent_available ? $('cd4_percent').value : null;
		var cd4_percent_numeric, cd4_percent_estimate, cd4_percent_modifier;

		try { cd4_percent_numeric = parseInt(cd4_percent); } catch(e) { cd4_percent_numeric = null; }

		if (cd4_percent_numeric == null || ''+cd4_percent_numeric == 'NaN') {
			try {
				var matches = cd4_percent.match(/^(\<|\>)([0-9\.]+)$/)
				cd4_percent_modifier = matches[1]; 
				cd4_percent_estimate = parseInt(matches[2]);
				cd4_percent_numeric = cd4_percent_estimate;
				if (cd4_percent_modifier == '<') cd4_percent_numeric -= 1;
				if (cd4_percent_modifier == '>') cd4_percent_numeric += 1;
			} catch(e) {
				cd4_percent_modifier = null; 
				cd4_percent_estimate = null;
				cd4_percent_numeric = null;
			}
		}

		if (cd4_percent_numeric == null || ''+cd4_percent_numeric == 'NaN') {
			$('cd4_percent_less_than_25').value = "UNKNOWN";
		} else {
			$('cd4_percent_less_than_25').value = (cd4_percent_numeric < 25) ? "YES" : "NO";
		}      
	}

	// These are here in case you are looking up hard coded concept names
	// WHO STAGE I ADULT
	// WHO STAGE II ADULT
	// WHO STAGE III ADULT
	// WHO STAGE IV ADULT
	// WHO STAGE I PEDS
	// WHO STAGE II PEDS
	// WHO STAGE III PEDS
	// WHO STAGE IV PEDS
	function whoStageConcept(stage, adultOrPeds) {   
		try {
			selected_stage_three_conditions = selected_stage_conditions[3].split(';'); 
		} catch(e) { 
			selected_stage_three_conditions = null; 
		}

		if (selected_stage_three_conditions) {
			conditions_found = 0;
			severe_weight_loss = false;
			
			for (i = 0 ; i < selected_stage_three_conditions.length ; i++) {
				if (selected_stage_three_conditions[i] == 'Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained') {
					severe_weight_loss = true;
				} else if (selected_stage_three_conditions[i] == 'Diarrhoea, chronic (>1 month) unexplained') {
					conditions_found++;
				} else if (selected_stage_three_conditions[i] == 'Fever, persistent unexplained, intermittent or constant, >1 month') {
					conditions_found++;
				}
			}

			if (conditions_found > 0 && severe_weight_loss) {
				<%	if !@retrospective %>
					selected_stage_conditions[4] = 'HIV wasting syndrome (severe weight loss + persistent fever or severe weight loss + chronic diarrhoea)';
					$('calculated_who_stage_4').value = selected_stage_conditions[4]; 	
				<%	end	%>

				return  "WHO STAGE " + numeral(4) + " " + adultOrPeds;
			}
		}

		return "WHO STAGE " + numeral(stage) + " " + adultOrPeds;  
	}

	function numeral(num) {
		switch(num) {
			case 1: 
				return "I";
			case 2: 
				return "II";
			case 3: 
				return "III";
			case 4: 
				return "IV";
		}
	}

	var whoStage = null;
  

	function updateWhoStage() {
		// Everyone is supposed to be HIV positive so start them at 1
		whoStage = 1;
		for (var i=1; i<=4; i++) {
			try {
				if ( $("stage_" + i + "_conditions").value != '') whoStage = i;
			} catch(e) {

			}
			
		}

		var adultOrPeds = (age > 14) ? "ADULT" : "PEDS";
 
		if (ageInMonths < 12 && firstPositiveHivTestType == "HIV rapid test") {
			$('who_stage').value = "PRESUMED SEVERE HIV";
		} else {
			$('who_stage').value = whoStageConcept(whoStage, adultOrPeds);
		}     
	}

	function updateReasonForArtEligibility() {
		var reasonForArtEligibility = "NONE";    
		// Lymphocyte thresholds for ages 0-15
		var lymphocyteThresholds = [4000, 4000, 4000, 3000, 3000, 2500, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000];

		var lymphocyteCountAvailable = false;

		if ($('new_lymphocyte_count_available')) {
			lymphocyteCountAvailable = $('new_lymphocyte_count_available').value == 'YES';	
		}

		var lymphocyteCount = lymphocyteCountAvailable ? $('lymphocyte_count').value : null;
		var lymphocyteCountNumeric = null;

		try { lymphocyteCountNumeric = parseInt(lymphocyteCount); } catch(e) { }

		if (age > 14) {        
			if (whoStage >= 3) {
				reasonForArtEligibility = whoStageConcept(whoStage, "ADULT");  
			} else if($('cd4_count_less_than_350').value == "YES") {
				reasonForArtEligibility = "CD4 COUNT LESS THAN OR EQUAL TO 350";
			} else {
				if ($('pregnant') && $('pregnant').value == "YES" && $('cd4_count_less_than_350').value == "YES") {
					reasonForArtEligibility = "CD4 COUNT LESS THAN OR EQUAL TO 350";
				} else if (whoStage == 2 && lymphocyteCount < 1200) {
					reasonForArtEligibility = "LYMPHOCYTE COUNT BELOW THRESHOLD WITH WHO STAGE 2";              
				} else if ($('pregnant') && $('pregnant').value == "YES") {
					reasonForArtEligibility = "PATIENT PREGNANT";              
				} else if ($('breast_feeding') && $('breast_feeding').value == "YES") {
					reasonForArtEligibility = "BREASTFEEDING";              
				}
			}
		} else {
			var presumedSevereHivConditions = "";
			if ($('presumed_severe_hiv_conditions')) presumedSevereHivConditions = selectedValues($('presumed_severe_hiv_conditions'));
			var presumedSevereHiv = false;
		
			if (firstPositiveHivTestType == "HIV rapid test") {
				if (
					presumedSevereHivConditions.indexOf("Pneumocystis pneumonia") > -1 ||
					presumedSevereHivConditions.indexOf("Candidiasis of oseophagus, trachea and bronchi or lungs") > -1 ||
					presumedSevereHivConditions.indexOf("Cryptococcal meningitis") > -1 ||
					presumedSevereHivConditions.indexOf("Severe unexplained wasting or malnutrition not responding to treatment (weight-for-height/ -age <70% or MUAC <11cm or oedema)") > -1 ||
					presumedSevereHivConditions.indexOf("Toxoplasmosis of the brain (from age 1 month)") > -1) {
					presumedSevereHiv = true;
				} else if (
					((presumedSevereHivConditions.indexOf("Oral candidiasis") > -1) && (presumedSevereHivConditions.indexOf("Severe sepsis") > -1)) ||
					((presumedSevereHivConditions.indexOf("Oral candidiasis") > -1) && (presumedSevereHivConditions.indexOf("Severe pneumonia") > -1)) ||
					((presumedSevereHivConditions.indexOf("Severe pneumonia") > -1) && (presumedSevereHivConditions.indexOf("Severe sepsis") > -1))) {
					presumedSevereHiv = true;
				}
			}

			try {
				if (ageInMonths < 12 && firstPositiveHivTestType == "HIV rapid test" && presumedSevereHiv) {
					reasonForArtEligibility = "PRESUMED SEVERE HIV";
				} else if (whoStage >= 3) {
					reasonForArtEligibility = whoStageConcept(whoStage, "PEDS");  
				} else if (ageInMonths < 12 && firstPositiveHivTestType == "HIV DNA POLYMERASE CHAIN REACTION") {
					reasonForArtEligibility = "HIV DNA POLYMERASE CHAIN REACTION";
				} else if (ageInMonths < 24) {
					reasonForArtEligibility = "HIV infected";
				} else if (cd4_count_numeric <= 750 && (ageInMonths >= 24 && ageInMonths < 56) && (whoStage) <= 2) {
					reasonForArtEligibility = "CD4 COUNT LESS THAN OR EQUAL TO 750";
				} else if ($('cd4_count_less_than_350') && $('cd4_count_less_than_350').value == "YES" && (whoStage) <= 2) {
					reasonForArtEligibility = "CD4 COUNT LESS THAN OR EQUAL TO 350";
				} else if (lymphocyteCount && (lymphocyteCount < lymphocyteThresholds[age])) {
					reasonForArtEligibility = "LYMPHOCYTE COUNT BELOW THRESHOLD WITH WHO STAGE 2";              
				} else if ($('pregnant') && $('pregnant').value == "YES") {
					reasonForArtEligibility = "PATIENT PREGNANT";              
				} else if ($('breast_feeding') && $('breast_feeding').value == "YES") {
					reasonForArtEligibility = "BREASTFEEDING";              
				}
			} catch (e) {}
		}
  
		$('reason_for_art_eligibility').value = reasonForArtEligibility;
	}

	function checkPregnancyAndAge() {
    var patientAge = "<%= @patient_bean.age.to_i %>";
    var pregnancyStatus = $('pregnant').value;

    if ((patientAge >= 55) && pregnancyStatus == "YES") {
       return "true";
    } else {
      return "false";
    }
  }

  function checkBreastfeedingAndAge() {
    var patientAge = "<%= @patient_bean.age.to_i %>";
    var breastfeedingStatus = $('breast_feeding').value;

    if ((patientAge >= 55) && breastfeedingStatus == "YES") {
       return "true";
    } else {
      return "false";
    }
  }

	function summary() {

		updateWhoStage(); 
		updateReasonForArtEligibility();  
		var conditions = selectedConditions();
		var display = "<div><span class='title'>WHO Stage: " + $('who_stage').value + "</span></div>";
		display += "<div><span class='title'>Reason for ART Eligibility: " + $('reason_for_art_eligibility').value + "</span></div>";

		$('inputFrame'+tstCurrentPage).innerHTML = '<div id="summary">' + display + '</div>' ;    
		$("clearButton").style.display = "none";
		
		if (conditions.length > 0) {
			$('inputFrame'+tstCurrentPage).innerHTML += '<div id="selected_stage_conditions"><hr /><br />' + conditions + '</div>' ;    
		}
	}  

	function selectedValues(element) {
		selected_values = [];
		for (i = 0 ; i < element.options.length ; i++) {
			if (element.options[i].selected){
				selected_values.push(element.options[i].value);
			}
		}

		try {
			return selected_values.join(',');
		} catch(e) { 
			return null; 
		}
	} 

	function showPresumed() {
		try {
			age_in_months = parseInt("<%=@patient_bean.age_in_months%>");
			if (age_in_months < 12) {
				return true;
			}
		} catch(e) { 
			return false;
		}
	
		return false;
	}

	function transferInPatient() {
		transfer_in = "<%= @patient_is_transfer_in == true %>";
		if (transfer_in == 'true') {
			return true;
		}

		return false;
	}

	function selectedConditions() {
		html = "<ul><h3>Selected stage defining conditions</h3>"
		for (condition in selected_stage_conditions) {
			if (selected_stage_conditions[condition].length > 0) {
				conditions = selected_stage_conditions[condition].split(';');
				for (i = 0 ; i < conditions.length ; i++) {
					html += '<li>' + conditions[i] + '</li>'
				}
			}
		}
		if (html == "<ul><h3>Selected stage defining conditions</h3>") return '';
		return html + '</ul>';
	}

	function setSelectedStageConditions(stage) {
		selected_stage_conditions[stage] = $("touchscreenInput" + tstCurrentPage).value;
	}

	function showConditions() {
		try {
			cond = selected_stage_conditions[1].split(';');
		}catch(e) { 
			cond = [] 
		}

		for (i = 0 ; i < cond.length ; i++) {
			if(cond[i] == 'Asymptomatic HIV infection' || cond[i] == 'Asymptomatic') {
			return false;
			}
		}
		return true;
	}

</script>  
<style type="text/css">
  .small .options li { font-size:1.1em; }
  .tt_controls_cd4_count #lessthan, .tt_controls_cd4_count #greaterthan { display:block; float:right }
  .tt_controls_cd4_percent #lessthan, .tt_controls_cd4_percent #greaterthan { display:block; float:right }
</style>


<% reason_for_art = @patient.person.observations.recent(1).question("REASON FOR ART ELIGIBILITY").all rescue []
	art_reasons = reason_for_art.map{|c|ConceptName.find(c.value_coded_name_id).name}.join(',') rescue ''
	if not reason_for_art.blank? and not art_reasons.upcase == 'UNKNOWN'%>
	<div class="inputPage NoKeyboard" id="page" style="display: block;">
		<div id="trigger"></div>
		<div id="infoBar" class="infoBarClass"></div>
		<label id="helpText" class="helpTextClass" for="">
		  This patient has already been staged.<br/>
		  <%='&nbsp;'*3%>Reason for ART:&nbsp;<%= art_reasons %>
		</label>
	</div>
	<div id="buttons" class="buttonsDiv" style="top:456;">
		<div id="tt_extraButtons"></div>
		<button onmousedown="window.location=tt_cancel_destination;" id="cancelButton" class="button navButton red"><span>Cancel</span></button>
	</div>
	<script>
		setTimeout("window.location=tt_cancel_destination;", 5000);
	</script>
<% else %>

	<form id='appointment' action="/encounters/create" method='post'>
		<%= hidden_field_tag "encounter[encounter_type_name]", "HIV STAGING" %>
		<%= hidden_field_tag "encounter[patient_id]", @patient.id %>
		<%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
		<%= hidden_field_tag "encounter[provider_id]", session[:user_id] %>

		<% if @patient_bean.age_in_months < 12 and @confirmatory_hiv_test_type == 'HIV rapid test' %>
			<%= touch_select_tag "PRESUMED SEVERE HIV CRITERIA PRESENT", @patient, concept_set_options('PRESUMED SEVERE HIV CRITERIA IN INFANTS'),
				{	:id => "presumed_severe_hiv_conditions",
					:multiple => true,
					:optional => true,
					:helpText => "Presumed severe HIV criteria (infants only)",
					:tt_pageStyleClass => "NoKeyboard NoInput small"  } %>
		<% else %>

			<% if @patient_bean.sex == 'Female' and  @patient_bean.age > 14
				  obs_date = session[:datetime].to_date rescue Date.today
				  patient_pregnant = Observation.find(:first,:conditions =>["concept_id = ? AND person_id = ? AND DATE(obs_datetime) = ?",
							       ConceptName.find_by_name('IS PATIENT PREGNANT?').concept_id,
							       @patient.id,obs_date]) %>

				<% if @patient_is_transfer_in && (@patient_transfer_in_date == session[:datetime])%>
					<% if patient_pregnant.blank? %>
						<%= touch_yes_no_unknown_tag "IS PATIENT PREGNANT?", @patient, nil,
							{	:id => "pregnant" ,
								:optional => false ,
								:validationCode => "checkPregnancyAndAge() == 'false'",
								:validationMessage => "Patient (#{@patient_bean.name}) is #{@patient_bean.age} years old. Is she pregnant?",
								:helpText => "Patient pregnant at initiation?" } %>
					<% end %>    

					<%= touch_yes_no_unknown_tag "IS PATIENT BREAST FEEDING?", @patient, nil,
						{	:id => "breast_feeding" ,
							:optional => false ,
							:validationCode => "checkBreastfeedingAndAge() == 'false'",
							:validationMessage => "Patient (#{@patient_bean.name}) is #{@patient_bean.age} years old. Is she breastfeeding?",
							:helpText => "Patient breast feeding at initiation?" } %>
				<% else %>
					<% if patient_pregnant.blank? %>
						<%= touch_yes_no_unknown_tag "IS PATIENT PREGNANT?", @patient, nil,
							{	:id => "pregnant" ,
								:optional => false ,
								:validationCode => "checkPregnancyAndAge() == 'false'",
								:validationMessage => "Patient (#{@patient_bean.name}) is #{@patient_bean.age} years old. Is she pregnant?",
								:helpText => "Is patient pregnant?" } %>
	 				<% end %>    

					<%= touch_yes_no_unknown_tag "IS PATIENT BREAST FEEDING?", @patient, nil,
						{	:id => "breast_feeding" ,
							:optional => false ,
							:validationCode => "checkBreastfeedingAndAge() == 'false'",
							:validationMessage => "Patient (#{@patient_bean.name}) is #{@patient_bean.age} years old. Is she breastfeeding?",
							:helpText => "Is patient breast feeding?" } %>

				<% end %>
			<% end %>    

			 <%= touch_select_tag "WHO STAGES CRITERIA PRESENT", @patient, options_for_select(@who_stage_i),
				  {:id => "stage_1_conditions",
				   :multiple => true,
				   :optional => true,
				   :tt_onUnLoad => 'setSelectedStageConditions(1);',
				   :helpText => "Stage 1 Conditions",
				   :tt_pageStyleClass => "NoKeyboard NoInput small" } %>

			  <%= touch_select_tag "WHO STAGES CRITERIA PRESENT", @patient,  options_for_select(@who_stage_ii),
				  {:id => "stage_2_conditions",
				   :multiple => true,
				   :optional => true,
				   :condition => 'showConditions() == true',
				   :tt_onUnLoad => 'setSelectedStageConditions(2);',
				   :helpText => "Stage 2 Conditions",
				   :tt_pageStyleClass => "NoKeyboard NoInput small"  } %>


			  <%= touch_select_tag "WHO STAGES CRITERIA PRESENT", @patient,  options_for_select(@who_stage_iii),
				  {:id => "stage_3_conditions",
				   :multiple => true,
				   :optional => true,
				   :condition => 'showConditions() == true',
				   :tt_onUnLoad => 'setSelectedStageConditions(3);',
				   :helpText => "Stage 3 Conditions",
				   :tt_pageStyleClass => "NoKeyboard NoInput small"  } %>


			  <%= touch_select_tag "WHO STAGES CRITERIA PRESENT", @patient,  options_for_select(@who_stage_iv),
				  {:id => "stage_4_conditions",
				   :multiple => true,
				   :optional => true,
				   :tt_onUnLoad => 'setSelectedStageConditions(4);',
				   :condition => 'showConditions() == true',
				   :helpText => "Stage 4 Conditions",
				   :tt_pageStyleClass => "NoKeyboard NoInput small"  } %>

			<label for='new_cd4_count_available'>CD4 count available?</label>
			  <%= select_tag "new_cd4_count_available", options_for_select([['Yes','YES'],['No','NO']]), :id => 'new_cd4_count_available', :tt_pageStyleClass => 'NoKeyboard' %>

			<%= touch_location_tag "CD4 COUNT LOCATION", @patient, nil,
			  {:id => "cd4_count_location",
			   :condition => '$("new_cd4_count_available").value == "YES" && transferInPatient() == false',
			   :helpText => "CD4 Count Location"} %>

			<%= touch_date_tag "CD4 COUNT DATETIME", @patient, nil,
			  {:id => "cd4_count_date",
			   :condition => '$("new_cd4_count_available").value == "YES"',
			   :helpText => "CD4 Count Date",
			   :max => "#{session[:datetime].to_date rescue Date.today}"} %>

			<%= touch_numeric_tag "CD4 COUNT", @patient, nil,
			  {:id => "cd4_count",
			   :condition => '$("new_cd4_count_available").value == "YES"',
			   :helpText => "CD4 Count",
			   :max => 1000 ,
			   :min => 1 ,
			   :tt_onUnLoad => "updateCD4Count();"} %>

			<%= touch_hidden_tag "CD4 COUNT LESS THAN OR EQUAL TO 250", @patient, "", :id => "cd4_count_less_than_250" %>
			<%= touch_hidden_tag "CD4 COUNT LESS THAN OR EQUAL TO 350", @patient, "", :id => "cd4_count_less_than_350" %>

			<% if @patient_bean.age <= 14 %>

				<label for='new_cd4_percent_available'>New CD4 percent available?</label>
				  <%= select_tag "new_cd4_percent_available", options_for_select([['Yes','YES'],['No','NO']]), :id => 'new_cd4_percent_available', :tt_pageStyleClass => 'NoKeyboard' %>

				<%= touch_location_tag "CD4 PERCENT LOCATION", @patient, nil,
				  {:id => "cd4_percent_location",
				   :condition => '$("new_cd4_percent_available").value == "YES"',
				   :helpText => "CD4 Percent Location"} %>

				<%= touch_date_tag "CD4 PERCENT DATETIME", @patient, (Time.now - 1.month).year,
				  {:id => "cd4_percent_date",
				   :condition => '$("new_cd4_percent_available").value == "YES"',
				   :helpText => "CD4 Percent Date",
			  		 :max => "#{session[:datetime].to_date rescue Date.today}"} %>

				<%= touch_numeric_tag "CD4 PERCENT", @patient, nil,
				  {:id => "cd4_percent",
				   :condition => '$("new_cd4_percent_available").value == "YES"',
				   :helpText => "CD4 Percent",
				   :tt_onUnLoad => 'updateCD4Percent()'} %>

				<%= touch_hidden_tag "CD4 PERCENT LESS THAN 25", @patient, "", :id => "cd4_percent_less_than_25" %>

			<% end %>

			<label for='new_lymphocyte_count_available'>New Lymphocyte count available?</label>
			  <%= select_tag "new_lymphocyte_count_available", options_for_select([['Yes','YES'],['No','NO']]), :id => 'new_lymphocyte_count_available', :tt_pageStyleClass => 'NoKeyboard' %>

			<%= touch_location_tag "LYMPHOCYTE COUNT LOCATION", @patient, nil,
			  {:id => "lymphocyte_count_location",
			   :condition => '$("new_lymphocyte_count_available").value == "YES"',
			   :helpText => "Lymphocyte Count Location"} %>

			<%= touch_date_tag "LYMPHOCYTE COUNT DATETIME", @patient, nil,
			  {:id => "lymphocyte_count_date",
			   :condition => '$("new_lymphocyte_count_available").value == "YES"',
			   :helpText => "Lymphocyte Count Date",
				 	 :max => "#{session[:datetime].to_date rescue Date.today}"} %>

			<%= touch_numeric_tag "LYMPHOCYTE COUNT", @patient, nil,
			  {:id => "lymphocyte_count",
			   :condition => '$("new_lymphocyte_count_available").value == "YES"',
			   :helpText => "Lymphocyte Count"} %>
		<% end %>

		<%= touch_text_area_tag("CLINICAL NOTES CONSTRUCT", @patient, nil,
			{	:optional => true,:helpText => "Clinical notes (optional)"}, time=DateTime.now()) %>

		<%= touch_hidden_tag "WHO STAGES CRITERIA PRESENT", @patient, "", :id => "calculated_who_stage_4" %>
		<%= touch_hidden_tag "WHO STAGE", @patient, "", :id => "who_stage" %>
		<%= touch_hidden_tag "REASON FOR ART ELIGIBILITY", @patient, "", :id => "reason_for_art_eligibility" %>

		<label for='summary'>Summary</label>
		<%= text_field_tag :summary, nil, { :tt_onLoad => "summary();", :optional => "true", :tt_pageStyleClass => "NoControls" } %>

		<% session_date = session[:datetime].to_date rescue nil                       

		if session_date %>
			<p><label for="filter_provider">Staff who provided the information (Provider)</label></br>
			<%= text_field "filter" , 'provider', :helpText => 'Staff who provided the information (Provider)', :ajaxURL => '/user/username?username=' %></p>
		<% else %>
			<%= hidden_field_tag "filter[provider]", nil %>
		<%end%>
		<%= submit_tag "Finish" %>    
	</form>
<% end %>


