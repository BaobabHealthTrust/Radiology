<%  count = 0 %>
<style>
	.helpTextClass {	width: 400px; 
						height: 200px; }

  .tt_controls_clinical_notes_optional #space { display:inline; }

  .tt_controls_cd4_count .buttonLine {
    height: 80px;
  }
  
  .tt_controls_cd4_count #char {
    display: none;
  }

  .tt_controls_cd4_percent .buttonLine {
    height: 80px;
  }

  .tt_controls_cd4_percent #char {
    display: none;
  }

  .inputFrameClass {                                                            
    position: inherit;                                                          
    top: 170px; 
  }

  .helpTextClass { 
    left: 0px; 
    position: absolute; 
    width: 100%;
  }

  #tt_page_cd4_count_location .inputFrameClass {                                                            
    top: 60px; 
  }

  #tt_page_cd4_count_date .inputFrameClass {                                                            
    top: 60px; 
  }

  #tt_page_cd4_count .inputFrameClass {                                                            
    top: 60px; 
  }

  #tt_page_new_lymphocyte_count_available .inputFrameClass {                                                            
    top: 60px; 
  }

  .tt_controls_new_lymphocyte_count_available .inputFrameClass {                                                            
    top: 60px; 
  }

  #tt_page_lymphocyte_count_location .inputFrameClass {                                                            
    top: 60px; 
  }

  #tt_page_lymphocyte_count_date .inputFrameClass {                                                            
    top: 60px; 
  }

  #tt_page_lymphocyte_count .inputFrameClass {                                                            
    top: 60px; 
  }

  #tt_page_clinical_notes_optional .inputFrameClass {                                                            
    top: 51px; 
  }

  #tt_page_summary .inputFrameClass {                                                            
    top: 60px; 
  }  

  #tt_page_presumed_severe_hiv_criteria_infants_only .inputFrameClass {                                                            
    top: 60px; 
  }

</style>

<script>
 
  function cssText() {
    element = document.getElementsByClassName("inputFrameClass")[0];
    element.style.cssText = 'height:280px !important';
  }

  <% firstPositiveHivTestType = @confirmatory_hiv_test_type %>
  var tt_cancel_destination = "/patients/show/<%= @patient.patient_id -%>";
  var age = <%= @patient_bean.age -%>;
  var ageInMonths = <%= @patient_bean.age_in_months -%>;
  var firstPositiveHivTestType = "<%= @confirmatory_hiv_test_type -%>";  
  var cd4_count_numeric, cd4_count_estimate, cd4_count_modifier;
  var selected_stage_conditions = {};

  function updateCD4Count() {
    var cd4_available = $('new_cd4_count_available').value == 'YES';
    var cd4_count = cd4_available ? $('cd4_count').value : null;
    try { cd4_count_numeric = parseInt(cd4_count); } catch(e) { cd4_count_numeric = null; }
    if (cd4_count_numeric == null || ''+cd4_count_numeric == 'NaN') {
      try {
        var matches = cd4_count.match(/^(\<|\>)([0-9\.]+)$/)
        cd4_count_modifier = matches[1]; 
        cd4_count_estimate = parseInt(matches[2]);
        cd4_count_numeric = cd4_count_estimate;
        if (cd4_count_modifier == '<') cd4_count_numeric -= 1;
        if (cd4_count_modifier == '>') cd4_count_numeric += 1;
      } catch(e) {
        cd4_count_modifier = null; 
        cd4_count_estimate = null;
        cd4_count_numeric = null;
      }
    }
    if (cd4_count_numeric == null || ''+cd4_count_numeric == 'NaN') {
      $('cd4_count_less_than_250').value = "UNKNOWN";
      $('cd4_count_less_than_350').value = "UNKNOWN";
    } else {
      $('cd4_count_less_than_250').value = (cd4_count_numeric <= 250) ? "YES" : "NO";
      $('cd4_count_less_than_350').value = (cd4_count_numeric <= 350) ? "YES" : "NO";
    }    
  }

  function updateCD4Percent() {
    var cd4_percent_available = $('new_cd4_percent_available').value == 'YES';
    var cd4_percent = cd4_percent_available ? $('cd4_percent').value : null;
    var cd4_percent_numeric, cd4_percent_estimate, cd4_percent_modifier;
    try { cd4_percent_numeric = parseInt(cd4_percent); } catch(e) { cd4_percent_numeric = null; }
    if (cd4_percent_numeric == null || ''+cd4_percent_numeric == 'NaN') {
      try {
        var matches = cd4_percent.match(/^(\<|\>)([0-9\.]+)$/)
        cd4_percent_modifier = matches[1]; 
        cd4_percent_estimate = parseInt(matches[2]);
        cd4_percent_numeric = cd4_percent_estimate;
        if (cd4_percent_modifier == '<') cd4_percent_numeric -= 1;
        if (cd4_percent_modifier == '>') cd4_percent_numeric += 1;
      } catch(e) {
        cd4_percent_modifier = null; 
        cd4_percent_estimate = null;
        cd4_percent_numeric = null;
      }
    }
    if (cd4_percent_numeric == null || ''+cd4_percent_numeric == 'NaN') {
      $('cd4_percent_less_than_25').value = "UNKNOWN";
    } else {
      $('cd4_percent_less_than_25').value = (cd4_percent_numeric < 25) ? "YES" : "NO";
    }      
  }

  
  // These are here in case you are looking up hard coded concept names
  // WHO STAGE I ADULT
  // WHO STAGE II ADULT
  // WHO STAGE III ADULT
  // WHO STAGE IV ADULT
  // WHO STAGE I PEDS
  // WHO STAGE II PEDS
  // WHO STAGE III PEDS
  // WHO STAGE IV PEDS
	function whoStageConcept(stage, adultOrPeds) {    
		if (selected_stage_conditions) {
			var selected_stage_conditions_ext = []
			for (conditions in selected_stage_conditions) {
				selected_stage_conditions_ext.push(selected_stage_conditions[conditions]);
			}

			conditions_found = 0;
			severe_weight_loss = false;
			for (i = 0 ; i < selected_stage_conditions_ext.length ; i++) {
				if (selected_stage_conditions_ext[i] == 'Severe weight loss >10% and/or BMI <18.5kg/m^2, unexplained') {
					severe_weight_loss = true;
				}else if (selected_stage_conditions_ext[i] == 'Diarrhoea, chronic (>1 month) unexplained') {
					conditions_found++;
				}else if (selected_stage_conditions_ext[i] == 'Fever, persistent unexplained, intermittent or constant, >1 month') {
					conditions_found++;
				}
			}

			if (conditions_found > 0 && severe_weight_loss) {
				<%	if !@retrospective %>
					selected_stage_conditions[<%= count + 1 %>] = 'HIV wasting syndrome (severe weight loss + persistent fever or severe weight loss + chronic diarrhoea)';
					$('calculated_who_stage_4').value = selected_stage_conditions[<%= count + 1 %>]; 	
				<%	end	%>

				return  "WHO STAGE " + numeral(4) + " " + adultOrPeds;
			}
		}

		return "WHO STAGE " + numeral(stage) + " " + adultOrPeds;  
	}
  
  function numeral(num) {
    switch(num) {
      case 1: 
        return "I";
      case 2: 
        return "II";
      case 3: 
        return "III";
      case 4: 
        return "IV";
    }
  }
    
  var whoStage = null;  
  var whoStageConditions = {};  
    
  function updateWhoStage() {
    whoStage = 1;
    for (stage in whoStageConditions) { 
      for (selected_condition in selected_stage_conditions) { 
        stage_conditions = whoStageConditions[stage];
        for (i = 0 ; i < stage_conditions.length ; i++) {
          if (selected_stage_conditions[selected_condition] == stage_conditions[i]){
            whoStage = parseInt(stage);
          }
        }
      }
    }


    var adultOrPeds = (age > 14) ? "ADULT" : "PEDS";

    $('who_stage').value = whoStageConcept(whoStage, adultOrPeds); 
	if (ageInMonths < 12 && firstPositiveHivTestType == "HIV rapid test") {
		$('who_stage').value = "PRESUMED SEVERE HIV";
	}
     
    return whoStage
  }
  
  function updateReasonForArtEligibility() {
    var reasonForArtEligibility = "NONE";    
    // Lymphocyte thresholds for ages 0-15
    var lymphocyteThresholds = [4000, 4000, 4000, 3000, 3000, 2500, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000];


    var lymphocyteCountAvailable = false;

	if ($('new_lymphocyte_count_available')) {
		lymphocyteCountAvailable = $('new_lymphocyte_count_available').value == 'YES';	
	}


    
    var lymphocyteCount = lymphocyteCountAvailable ? $('lymphocyte_count').value : null;
    var lymphocyteCountNumeric = null;
    try { lymphocyteCountNumeric = parseInt(lymphocyteCount); } catch(e) { }

	   
	if (age > 14) {        
      if(whoStage >= 3) {
        reasonForArtEligibility = whoStageConcept(whoStage, "ADULT");  
      } else if($('cd4_count_less_than_350').value == "YES") {
        reasonForArtEligibility = "CD4 COUNT LESS THAN OR EQUAL TO 350";
      } else {
        if ($('pregnant') && $('pregnant').value == "YES" && $('cd4_count_less_than_350').value == "YES") {
          reasonForArtEligibility = "CD4 COUNT LESS THAN OR EQUAL TO 350";
        } else if (whoStage == 2 && lymphocyteCount < 1200) {
          reasonForArtEligibility = "LYMPHOCYTE COUNT BELOW THRESHOLD WITH WHO STAGE 2";              
        } else if ($('pregnant') && $('pregnant').value == "YES") {
          reasonForArtEligibility = "PATIENT PREGNANT";              
        } else if ($('breast_feeding') && $('breast_feeding').value == "YES") {
          reasonForArtEligibility = "BREASTFEEDING";              
        }
      }
    } else {

      var presumedSevereHivConditions = "";
      if ($('presumed_severe_hiv_conditions')) presumedSevereHivConditions = selectedValues($('presumed_severe_hiv_conditions'));
        var presumedSevereHiv = false;

		if (firstPositiveHivTestType == "HIV rapid test") {
			if (
				presumedSevereHivConditions.indexOf("Pneumocystis pneumonia") > -1 ||
				presumedSevereHivConditions.indexOf("Candidiasis of oseophagus, trachea and bronchi or lungs") > -1 ||
				presumedSevereHivConditions.indexOf("Cryptococcal meningitis") > -1 ||
				presumedSevereHivConditions.indexOf("Severe unexplained wasting or malnutrition not responding to treatment (weight-for-height/ -age <70% or MUAC <11cm or oedema)") > -1 ||
				presumedSevereHivConditions.indexOf("Toxoplasmosis of the brain (from age 1 month)") > -1) {
				presumedSevereHiv = true;
			} else if (
				((presumedSevereHivConditions.indexOf("Oral candidiasis") > -1) && (presumedSevereHivConditions.indexOf("Severe sepsis") > -1)) ||
				((presumedSevereHivConditions.indexOf("Oral candidiasis") > -1) && (presumedSevereHivConditions.indexOf("Severe pneumonia") > -1)) ||
				((presumedSevereHivConditions.indexOf("Severe pneumonia") > -1) && (presumedSevereHivConditions.indexOf("Severe sepsis") > -1))) {
				presumedSevereHiv = true;
			}
		}
      
      /*try{
        presumedSeverHiv == null} catch (e) {
      } finally {presumedSeverHiv = null}*/

      try {
        if (ageInMonths < 12 && firstPositiveHivTestType == "HIV rapid test" && presumedSevereHiv) {
          reasonForArtEligibility = "PRESUMED SEVERE HIV";
        } else if (whoStage >= 3) {
          reasonForArtEligibility = whoStageConcept(whoStage, "PEDS");  
        } else if (ageInMonths < 12 && firstPositiveHivTestType == "HIV DNA POLYMERASE CHAIN REACTION") {
          reasonForArtEligibility = "HIV DNA POLYMERASE CHAIN REACTION";
        } else if (ageInMonths < 24) {
          reasonForArtEligibility = "HIV infected";
        } else if (cd4_count_numeric <= 750 && (ageInMonths >= 24 && ageInMonths < 56) && (whoStage) <= 2) {
          reasonForArtEligibility = "CD4 COUNT LESS THAN OR EQUAL TO 750";
        } else if ($('cd4_count_less_than_350') && $('cd4_count_less_than_350').value == "YES" && (whoStage) <= 2) {
          reasonForArtEligibility = "CD4 COUNT LESS THAN OR EQUAL TO 350";
        } else if (lymphocyteCount && (lymphocyteCount < lymphocyteThresholds[age])) {
          reasonForArtEligibility = "LYMPHOCYTE COUNT BELOW THRESHOLD WITH WHO STAGE 2";              
        } else if ($('pregnant') && $('pregnant').value == "YES") {
          reasonForArtEligibility = "PATIENT PREGNANT";              
        } else if ($('breast_feeding') && $('breast_feeding').value == "YES") {
          reasonForArtEligibility = "BREASTFEEDING";              
        }
      }catch(e){}
    }  
    $('reason_for_art_eligibility').value = reasonForArtEligibility;
  }

  function summary() {


    updateWhoStage(); 
	
    updateReasonForArtEligibility();  
    var conditions = selectedConditions();
    var display = "<div><span class='title'>WHO Stage: " + $('who_stage').value + "</span></div>";
    display += "<div><span class='title'>Reason for ART Eligibility: " + $('reason_for_art_eligibility').value + "</span></div>";
    $('inputFrame'+tstCurrentPage).innerHTML = '<div id="summary">' + display + '</div>' ;    
    $("clearButton").style.display = "none";

    if (conditions.length > 0)
      $('inputFrame'+tstCurrentPage).innerHTML += '<div id="selected_stage_conditions"><hr /><br />' + conditions + '</div>' ;
  }  
 
  function selectedValues(element) {
    selected_values = []
    for (i = 0 ; i < element.options.length ; i++) {
      if (element.options[i].selected)
        selected_values.push(element.options[i].value)
    }
    try {
      return selected_values.join(',')
    }catch(e){ return null }
  } 

  function showPresumed() {
    try {
      age_in_months = parseInt("<%=@patient_bean.age_in_months%>");
      if (age_in_months < 12)
        return true
    }catch(e) { return false}
    return false
  }

  function transferInPatient() {
    transfer_in = "<%=  @patient_is_transfer_in == true %>"
    if (transfer_in == 'true')
      return true

    return false
  }

  function selectedConditions() {
    html = "<ul><h3>Selected stage defining conditions</h3>"
    for (condition in selected_stage_conditions) {
      if (selected_stage_conditions[condition].length > 0) {
        conditions = selected_stage_conditions[condition].split(';');
        for (i = 0 ; i < conditions.length ; i++) {
          html += '<li>' + conditions[i] + '</li>'
        }
      }
    }
    if (html == "<ul><h3>Selected stage defining conditions</h3>") return '';
    return html + '</ul>';
  }
    
  function setSelectedStageConditions(condition_num,staging_condition) {
    input_text = $('staging_condition_' + condition_num);
    if ( input_text.value == 'YES' ) {
      selected_stage_conditions[condition_num] = staging_condition;
    } else {
      try {
        if (selected_stage_conditions[condition_num])
          delete selected_stage_conditions[condition_num];
      }catch(e) {}
    }

  }

  function ifShowConditions(pageID) {
    //try {
    pageTitle = $(pageID).getAttribute("helptext");
    if (pageTitle == "Asymptomatic HIV infection");
      return true;

    for (condition in selected_stage_conditions) {
      if (selected_stage_conditions[condition].length > 0) {
        conditions = selected_stage_conditions[condition].split(';');
        for (i = 0 ; i < conditions.length ; i++) {
          if(conditions[i] == "Asymptomatic HIV infection"){
            goNextPage();
            break;
          }
        }
      }
    }
    return true
    //}catch(e){return true}
  }

  function checkPregnancyAndAge() {
    var patientAge = "<%= @patient_bean.age.to_i %>";
    var pregnancyStatus = $('pregnant').value;

    if ((patientAge >= 55) && pregnancyStatus == "YES") {
       return 'true';
    } else {
      return 'false';
    }
  }

  function checkBreastfeedingAndAge() {
    var patientAge = "<%= @patient_bean.age.to_i %>";
    var breastfeedingStatus = $('breast_feeding').value;

    if ((patientAge >= 55) && breastfeedingStatus == "YES") {
       return 'true';
    } else {
      return 'false';
    }
  }
    
</script>  
<style type="text/css">
  .small .options li { font-size:1.1em; }
  .tt_controls_cd4_count #lessthan, .tt_controls_cd4_count #greaterthan { display:block; float:right }
  .tt_controls_cd4_percent #lessthan, .tt_controls_cd4_percent #greaterthan { display:block; float:right }
</style>

<% 
reason_for_art = @patient.person.observations.recent(1).question("REASON FOR ART ELIGIBILITY").all rescue []
art_reasons = reason_for_art.map{|c|ConceptName.find(c.value_coded_name_id).name}.join(',') rescue ''
if not reason_for_art.blank? and not art_reasons.upcase == 'UNKNOWN'%>
  <div class="inputPage NoKeyboard" id="page" style="display: block;">
    <div id="trigger"></div>
    <div id="infoBar" class="infoBarClass"></div>
    <label id="helpText" class="helpTextClass" for="">
      This patient has already been staged.<br/>
      <%='&nbsp;'*3%>Reason for ART:&nbsp;<%= art_reasons %>
    </label>
  </div>
  <div id="buttons" class="buttonsDiv" style="top:456;">
    <div id="tt_extraButtons"></div>
    <button onmousedown="window.location=tt_cancel_destination;" id="cancelButton" class="button navButton red"><span>Cancel</span></button>
  </div>
  <script>
    setTimeout("window.location=tt_cancel_destination;", 5000);
  </script>
<% else %>

	<form id='appointment' action="/encounters/create" method='post'>
		<%= hidden_field_tag "encounter[encounter_type_name]", "HIV STAGING" %>
		<%= hidden_field_tag "encounter[patient_id]", @patient.id %>
		<%= hidden_field_tag "encounter[encounter_datetime]", DateTime.now() %>
		<%= hidden_field_tag "encounter[provider_id]", current_user.user_id %>
		
		<% if @patient_bean.age_in_months < 12 and @confirmatory_hiv_test_type == 'HIV rapid test' %>

			<%= touch_select_tag "PRESUMED SEVERE HIV CRITERIA PRESENT", @patient, concept_set_options('PRESUMED SEVERE HIV CRITERIA IN INFANTS'),
				{	:id => "presumed_severe_hiv_conditions",
					:multiple => true,
					:optional => true,
					:tt_onLoad => "$('nextButton').style.display = 'inline';",
					:helpText => "Presumed severe HIV criteria (infants only)",
					:tt_pageStyleClass => "NoKeyboard NoInput small"  } %>

		<% else %>

			<% if @patient_bean.sex == 'Female' and  @patient_bean.age > 14 %>

				<% if @is_patient_pregnant_value.nil? %>
					<%= touch_yes_no_unknown_tag "IS PATIENT PREGNANT?", @patient, nil,
						{	:id => "pregnant",
							:optional => false,
							:validationCode => "checkPregnancyAndAge() == 'false'",
							:validationMessage => "Patient (#{@patient_bean.name}) is #{@patient_bean.age} years old. Is she pregnant?",
							:tt_onLoad => "$('nextButton').style.display = 'none';setTimeout('cssText();',1);",
							:tt_requireNextClick => false,
							:helpText => "Is patient pregnant?" } %>
				<%else%>
					<%= touch_hidden_tag "IS PATIENT PREGNANT?" , @patient, @is_patient_pregnant_value , :id => "pregnant" %>
				<%end%>

				<% if @is_patient_breast_feeding_value.nil?%>
					<%= touch_yes_no_unknown_tag "IS PATIENT BREAST FEEDING?", @patient, nil,
						{	:id => "breast_feeding",
							:optional => false,
							:validationCode => "checkBreastfeedingAndAge() == 'false'",
							:validationMessage => "Patient (#{@patient_bean.name}) is #{@patient_bean.age} years old. Is she breastfeeding?",
							:tt_onLoad => "$('nextButton').style.display = 'none';setTimeout('cssText();',1);",
							:tt_requireNextClick => false,
							:helpText => "Is patient breast feeding?" } %>
				<%else%>
					<%= touch_hidden_tag "IS PATIENT BREAST FEEDING?" , @patient, @is_patient_breast_feeding_value , :id => "breast_feeding" %>
				<%end%>
			<% end %>    

			<script>
				whoStageConditions["1"] = [<%= "'" + @who_stage_i.collect{|c|c[0]}.join("', '") + "'" %>]
				whoStageConditions["2"] = [<%= "'" + @who_stage_ii.collect{|c|c[0]}.join("', '") + "'" %>]
				whoStageConditions["3"] = [<%= "'" + @who_stage_iii.collect{|c|c[0]}.join("', '") + "'" %>]
				whoStageConditions["4"] = [<%= "'" + @who_stage_iv.collect{|c|c[0]}.join("', '") + "'" %>]
			</script>

			<%

				extended_staging = []

				conditions = @who_stage_i + @who_stage_ii + @who_stage_iii + @who_stage_iv

				conditions.each do | staging_condition | 
					next if staging_condition.blank?
					if @not_explicitly_asked.collect{|c|c[0]}.include?(staging_condition[0])
						extended_staging << staging_condition[0] and next
					end	%>
			<%= touch_yes_no_unknown_tag staging_condition[0] , @patient, nil,
				{	:id => "staging_condition_#{count+=1}" ,
					:optional => false,
					:tt_onLoad => "$('nextButton').style.display = 'none';setTimeout('cssText();',1);",
					:tt_requireNextClick => false,
					:tt_onUnLoad => "setSelectedStageConditions(#{count},'#{staging_condition[0]}');",
					:helpText => staging_condition[0] } %>

			<% end %>

			<%= touch_yes_no_tag "Perform extended staging" , @patient, nil,
				{	:id => "perform_extended_staging" ,
					:optional => false,
					:tt_onLoad => "$('nextButton').style.display = 'inline';setTimeout('cssText();',1);",
					:helpText => 'Perform extended staging' } %>

			<% extended_staging.each do | staging_condition | %>
				<%= touch_yes_no_unknown_tag staging_condition , @patient, nil,
					{	:id => "staging_condition_#{count+=1}" ,
						:optional => false,
						:condition => '$("perform_extended_staging").value == "YES"',
						:tt_onLoad => "$('nextButton').style.display = 'none';setTimeout('cssText();',1);",
						:tt_requireNextClick => false,
						:tt_onUnLoad => "setSelectedStageConditions(#{count},'#{staging_condition}');",
						:helpText => staging_condition } %>
			<% end %>

			<label for='new_cd4_count_available'>CD4 count available?</label>
			<%= select_tag "new_cd4_count_available", options_for_select([['Yes','YES'],['No','NO']]), 
				:id => 'new_cd4_count_available', 
				:tt_onLoad => "$('nextButton').style.display = 'inline';setTimeout('cssText();',1);",
				:tt_pageStyleClass => 'NoKeyboard' %>

			<%= touch_location_tag "CD4 COUNT LOCATION", @patient, nil,
			  {:id => "cd4_count_location",
			   :condition => '$("new_cd4_count_available").value == "YES" && transferInPatient() == false',
			   :helpText => "CD4 Count Location"} %>

			<%= touch_date_tag "CD4 COUNT DATETIME", @patient, (Time.now - 1.month).year,
			  {:id => "cd4_count_date",
			   :condition => '$("new_cd4_count_available").value == "YES"',
			   :helpText => "CD4 Count Date",
			   :max => "#{session[:datetime].to_date rescue Date.today}"} %>

			<%= touch_numeric_tag "CD4 COUNT", @patient, nil,
			  {:id => "cd4_count",
			   :condition => '$("new_cd4_count_available").value == "YES"',
			   :helpText => "CD4 Count",
			   :max => 1000 ,
			   :min => 1 ,
			   :tt_onUnLoad => "updateCD4Count();"} %>

			<%= touch_hidden_tag "CD4 COUNT LESS THAN 250", @patient, "", :id => "cd4_count_less_than_250" %>
			<%= touch_hidden_tag "CD4 COUNT LESS THAN OR EQUAL TO 350", @patient, "", :id => "cd4_count_less_than_350" %>

			<% if @patient_bean.age <= 14 %>

				<label for='new_cd4_percent_available'>New CD4 percent available?</label>
				<%= select_tag "new_cd4_percent_available", options_for_select([['Yes','YES'],['No','NO']]), 
					:id => 'new_cd4_percent_available', 
					:tt_onLoad => "setTimeout('cssText();',1);",
					:tt_pageStyleClass => 'NoKeyboard' %>

				<%= touch_location_tag "CD4 PERCENT LOCATION", @patient, nil,
					{	:id => "cd4_percent_location",
						:condition => '$("new_cd4_percent_available").value == "YES"',
						:helpText => "CD4 Percent Location"} %>

				<%= touch_date_tag "CD4 PERCENT DATETIME", @patient, (Time.now - 1.month).year,
					{	:id => "cd4_percent_date",
						:condition => '$("new_cd4_percent_available").value == "YES"',
						:helpText => "CD4 Percent Date",
						:max => "#{session[:datetime].to_date rescue Date.today}"} %>

				<%= touch_numeric_tag "CD4 PERCENT", @patient, nil,
				{:id => "cd4_percent",
				:condition => '$("new_cd4_percent_available").value == "YES"',
				:helpText => "CD4 Percent",
				:tt_onUnLoad => 'updateCD4Percent()'} %>

				<%= touch_hidden_tag "CD4 PERCENT LESS THAN 25", @patient, "", :id => "cd4_percent_less_than_25" %>
			<% end %>

			<label for='new_lymphocyte_count_available'>New Lymphocyte count available?</label>
			<%= select_tag "new_lymphocyte_count_available", options_for_select([['Yes','YES'],['No','NO']]), 
				:id => 'new_lymphocyte_count_available', 
				:tt_onLoad => "setTimeout('cssText();',1);",
				:tt_pageStyleClass => 'NoKeyboard' %>

			<%= touch_location_tag "LYMPHOCYTE COUNT LOCATION", @patient, nil,
			  {:id => "lymphocyte_count_location",
			   :condition => '$("new_lymphocyte_count_available").value == "YES"',
			   :helpText => "Lymphocyte Count Location"} %>

			<%= touch_date_tag "LYMPHOCYTE COUNT DATETIME", @patient, (Time.now - 1.month).year,
			  {:id => "lymphocyte_count_date",
			   :condition => '$("new_lymphocyte_count_available").value == "YES"',
			   :helpText => "Lymphocyte Count Date",
			   :max => "#{session[:datetime].to_date rescue Date.today}"} %>

			<%= touch_numeric_tag "LYMPHOCYTE COUNT", @patient, nil,
			  {:id => "lymphocyte_count",
			   :condition => '$("new_lymphocyte_count_available").value == "YES"',
			   :helpText => "Lymphocyte Count"} %>
		
		<% end %>

  

  <%= touch_text_area_tag("CLINICAL NOTES CONSTRUCT", @patient, nil,
    {:optional => true,:helpText => "Clinical notes (optional)"}, time=DateTime.now()) %>

		<%= touch_hidden_tag "WHO STAGES CRITERIA PRESENT", @patient, "", :id => "calculated_who_stage_4" %>
		<%= touch_hidden_tag "WHO STAGE", @patient, "", :id => "who_stage" %>
		<%= touch_hidden_tag "REASON FOR ART ELIGIBILITY", @patient, "", :id => "reason_for_art_eligibility" %>
  
  <label for='summary'>Summary</label>
  <%= text_field_tag :summary, nil, { :tt_onLoad => "summary();", :optional => "true", :tt_pageStyleClass => "NoControls" } %>

  <% session_date = session[:datetime].to_date rescue nil                       
    if session_date %>

    <p><label for="filter_provider">Staff who provided the information (Provider)</label></br>
<%= text_field "filter" , 'provider', :helpText => 'Staff who provided the information (Provider)', :ajaxURL => '/user/username?username=' %></p>
    <% else %>
      <%= hidden_field_tag "filter[provider]", nil %>
    <%end%>
  <%= submit_tag "Finish" %>    
</form>
<% end %>
